#### Writen for LIGGGHTS 3.7.0 with bond ##########################################################

### Material Independent Properties
variable particle_diameter             equal 2.83e-3    # particles diameter in meters
variable bond_out_diameter             equal 2.83e-3    # fiber outer diameter in meters
variable bond_in_diameter              equal 0.0        # fiber inner diameter in meters
variable bond_length                   equal 2.83e-3    # distance, in meters, between two particles in bond 
variable bond_damp_type                equal 1          # Use Global Force Damping
variable bond_damp_val                 equal 0.001      # NA
variable particle_density              equal 2500.0     # kg/m3
variable fiber_contact_youngs_modulus  equal 1.4e7      # Pa
variable wall_contact_youngs_modulus   equal 180.0e9    # Pa
variable bond_youngs_modulus           equal 1.4e7      # Pa
variable particle_poissons_ratio       equal 0.3        # NA
variable wall_poissons_ratio           equal 0.3        # NA
variable ke_tol                        equal 1.0e-4     # Energy that we will run the simulation to obtain
variable coef_res_pp                   equal 0.500      # particle-particle coefficient of restitution
variable coef_res_pw                   equal 0.300      # particle-wall coefficient of restitution
variable coef_res_ww                   equal 0.500      # wall-wall coefficient of restitution
variable coef_fri_pp                   equal 0.400      # particle-particle coefficient of friction
variable coef_fri_pw                   equal 0.600      # particle-wall coefficient of friction
variable coef_fri_ww                   equal 0.200      # wall-wall coefficient of friction
variable plung_speed                   equal 0.100      # Speed of plunger
variable plung_dist                    equal 0.035      # Distance the plunger will travel
### Simulation Independent Parameters
variable restart_time                  equal 1.0e-2     # how often we write a restart file
variable fileprint_time                equal 1.0e-2     # how often we print to the file in seconds
variable thermo_time                   equal 1.0e-3     # how often we print to the screen in seconds
variable output_time                   equal 1.0e-3     # how often data is writen to csv file in seconds

### Material Dependent Properties
variable particle_radius               equal 0.5*${particle_diameter}
variable bond_shear_modulus            equal ${bond_youngs_modulus}/(2.0*(1.0+${particle_poissons_ratio}))
variable bond_out_per                  equal ${bond_out_diameter}/${particle_diameter}
variable bond_in_per                   equal ${bond_in_diameter}/${particle_diameter}

### Calculate dt using the bond model
variable r2                            equal ${particle_radius}*${particle_radius}
variable r3                            equal ${r2}*${particle_radius}
variable K                             equal ${bond_youngs_modulus}*PI*${r2}/${bond_length}
variable m                             equal 4.0*PI*${r3}*${particle_density}/3.0
variable w                             equal sqrt($K/$m)
variable dt                            equal 0.8/((1.0+3.0*${bond_damp_val})*$w)

### Simulation Dependent Parameters
variable restart_step                  equal ceil(${restart_time}/${dt})
variable fileprint_step                equal ceil(${fileprint_time}/${dt})
variable thermo_step                   equal ceil(${thermo_time}/${dt})
variable output_step                   equal ceil(${output_time}/${dt})
variable current_time                  file  cur_time.txt
variable compress_time                 equal ${plung_dist}/${plung_speed}+${current_time}
variable compress_steps                equal ceil(${compress_time}/${dt})+1

### Add needed directories
shell mkdir post/compression
### Build Simulation
# Specify what we are simulating
atom_style hybrid granular bond/gran n_bondtypes 1 bonds_per_atom 6
atom_modify map array
hard_particles yes # <- Needed because of the high Youngs modulus

## newton off is needed due to the tangential history contact model
newton off
communicate single vel yes

# Use hertz-mindeln contact model
pair_style gran model hertz tangential history
# Use the stiff granular bond model
bond_style gran

processors * * *

## Read in the latest restart file
read_restart restarts/restart*.liggghts

# Set neighbor bin sizes and update after each run step if needed
neighbor      0.001 bin
neigh_modify delay 0

## Set coefficients for contact and bond model
# For the contact model, we do not need to set anything
pair_coeff * *
# Set coefficients for bond model
bond_coeff 1 ${bond_out_per} ${bond_in_per} ${bond_youngs_modulus} ${bond_shear_modulus} ${bond_damp_type} ${bond_damp_val} 1 1.0e32 1.0e32


## Set material properties for fiber and wall
fix m1 all property/global youngsModulus peratomtype ${fiber_contact_youngs_modulus} ${wall_contact_youngs_modulus}
fix m2 all property/global poissonsRatio peratomtype ${particle_poissons_ratio} ${wall_poissons_ratio}
fix m3 all property/global coefficientRestitution peratomtypepair 2 ${coef_res_pp} ${coef_res_pw} &
                                                                    ${coef_res_pw} ${coef_res_ww}

fix m4 all property/global coefficientFriction peratomtypepair 2 ${coef_fri_pp} ${coef_fri_pw} &
                                                                 ${coef_fri_pw} ${coef_fri_ww}

## Insert the geometry for the simulation
# Load in the stl file of a container and make it interactable
fix Drum all mesh/surface/stress file STL_files/Drum.STL type 2 scale 0.001 move 0.0 0.0 0.0
# Add plunger and place it above the particles
# variable above_particles equal ${max_h}+1.00*${particle_radius}
fix Plung all mesh/surface/stress file STL_files/Plung_225.STL type 2 scale 0.001 move 0.0 0.0 0.0 # ${above_particles}
# Add the wall back this time with both geometries
fix wall all wall/gran model hertz tangential history mesh n_meshes 2 meshes Drum Plung
# Create a thin infinitly large plane in the x plain at a height of 0.15 meters
fix w1 all wall/gran model hertz tangential history primitive type 2 zplane 0.15
# Add gravity
fix grav all gravity 9.81 vector 0.0 0.0 -1.0
# Check for ray and hertz timestep complience
fix ts_check all check/timestep/gran ${thermo_step} 0.1 0.1 

fix integr all nve/sphere

timestep ${dt}
print "dt = ${dt}"

## Set screen output 
# Track the max height of the particles
compute max_height all reduce max z
variable max_h equal c_max_height
# Track the kinetic energy in the system
variable my_ke equal ke
# Keep track of the time in the simulation
variable sim_time equal step*${dt}

# Set the output to the screen to show the current simulation step, number of atoms, number of bonds, the simulation time,
# Add location of plunger and force on plunger to screen output
variable fz equal f_Plung[3]
variable pz equal f_Plung[9]
thermo_style custom step atoms numbonds v_sim_time cpuremain ke v_max_h v_fz v_pz
# Set how often the simulation outputs to the screen
thermo ${thermo_step}
# Ignore particles that leave the domain and do NOT noramlize the data
thermo_modify lost ignore norm no

# Make sure everything is loaded from the restart file
run 1

## MOVE THE PLUNGER!
fix mv all move/mesh mesh Plung linear 0.0 0.0 -${plung_speed}

# Write info to csv file for MATLAB
fix outfile all print ${output_step} "${sim_time}, ${pz}, ${fz}, ${my_ke}" file compression.csv screen no title "t, z, fz, ke"

# Wrtie particle locations to file
dump dmp all custom ${fileprint_step} post/compression/dump*.liggghts id type x y z ix iy iz vx vy vz fx fy fz omegax omegay omegaz radius

# Wrtie drum location to file
dump stldrm all mesh/vtk ${fileprint_step} post/compression/stl_drum*.vtk stress stresscomponents Drum

# Wrtie plunger location to file
dump stlplg all mesh/vtk ${fileprint_step} post/compression/stl_plung*.vtk stress stresscomponents Plung

# Write restart files as the simulation goes
restart ${restart_step} restarts/restart2.liggghts restarts/restart2.liggghts

# Run to completion
run ${compress_steps} upto
