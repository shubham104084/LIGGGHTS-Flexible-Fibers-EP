#### Writen for LIGGGHTS 3.7.0 with bond ##########################################################

### Material Independent Properties
variable particle_diameter             equal 2.83e-3    # particles diameter in meters
variable bond_out_diameter             equal 2.83e-3    # fiber outer diameter in meters
variable bond_in_diameter              equal 0.0        # fiber inner diameter in meters
variable bond_length                   equal 2.83e-3    # distance, in meters, between two particles in bond 
variable bond_damp_type                equal 1          # Use Global Force Damping
variable bond_damp_val                 equal 0.001      # NA
variable particle_density              equal 2500.0     # kg/m3
variable fiber_contact_youngs_modulus  equal 1.4e7      # Pa
variable wall_contact_youngs_modulus   equal 180.0e9    # Pa
variable bond_youngs_modulus           equal 1.4e7      # Pa
variable particle_poissons_ratio       equal 0.3        # NA
variable wall_poissons_ratio           equal 0.3        # NA
variable ke_tol                        equal 5.0e-5     # Energy that we will run the simulation to obtain
variable res_tol                       equal 1.0e-6     # Change of height tollerance that must be met
variable coef_res_pp                   equal 0.500      # particle-particle coefficient of restitution
variable coef_res_pw                   equal 0.300      # particle-wall coefficient of restitution
variable coef_res_ww                   equal 0.500      # wall-wall coefficient of restitution
variable coef_fri_pp                   equal 0.400      # particle-particle coefficient of friction
variable coef_fri_pw                   equal 0.600      # particle-wall coefficient of friction
variable coef_fri_ww                   equal 0.200      # wall-wall coefficient of friction

### Simulation Independent Parameters
variable fileprint_time                equal 1.0e-3  # how often we print to the file in seconds
variable thermo_time                   equal 1.0e-3  # how often we print to the screen in seconds
variable set_time                      equal 5.0e-3  # initial settiling time before we enter a loop

### Material Dependent Properties
variable particle_radius               equal 0.5*${particle_diameter}
variable bond_shear_modulus            equal ${bond_youngs_modulus}/(2.0*(1.0+${particle_poissons_ratio}))
variable bond_out_per                  equal ${bond_out_diameter}/${particle_diameter}
variable bond_in_per                   equal ${bond_in_diameter}/${particle_diameter}

### Calculate dt using the bond model
variable r2                            equal ${particle_radius}*${particle_radius}
variable r3                            equal ${r2}*${particle_radius}
variable K                             equal ${bond_youngs_modulus}*PI*${r2}/${bond_length}
variable m                             equal 4.0*PI*${r3}*${particle_density}/3.0
variable w                             equal sqrt($K/$m)
variable dt                            equal 0.8/((1.0+3.0*${bond_damp_val})*$w)

### Simulation Dependent Parameters
variable fileprint_step                equal ceil(${fileprint_time}/${dt})
variable thermo_step                   equal ceil(${thermo_time}/${dt})
variable set_step                      equal ceil(${set_time}/${dt})

### Add needed directory
shell mkdir post
shell mkdir post/calm

### Build Simulation
# Specify what we are simulating
atom_style hybrid granular bond/gran n_bondtypes 1 bonds_per_atom 6
atom_modify map array
hard_particles yes # <- Needed because of the high Youngs modulus

## newton off is needed due to the tangential history contact model
newton off
communicate single vel yes

# Use hertz-mindeln contact model
pair_style gran model hertz tangential history
# Use the stiff granular bond model
bond_style gran

processors * * *

## Read in the restart file
read_restart restarts/restart*.liggghts

# Set neighbor bin sizes and update after each run step if needed
neighbor      0.001 bin
neigh_modify delay 0

## Set coefficients for contact and bond model
# For the contact model, we do not need to set anything
pair_coeff * *
# Set coefficients for bond model
bond_coeff 1 ${bond_out_per} ${bond_in_per} ${bond_youngs_modulus} ${bond_shear_modulus} ${bond_damp_type} ${bond_damp_val} 1 1.0e32 1.0e32


## Set material properties for fiber and wall
fix m1 all property/global youngsModulus peratomtype ${fiber_contact_youngs_modulus} ${wall_contact_youngs_modulus}
fix m2 all property/global poissonsRatio peratomtype ${particle_poissons_ratio} ${wall_poissons_ratio}
fix m3 all property/global coefficientRestitution peratomtypepair 2 ${coef_res_pp} ${coef_res_pw} &
                                                                    ${coef_res_pw} ${coef_res_ww}

fix m4 all property/global coefficientFriction peratomtypepair 2 ${coef_fri_pp} ${coef_fri_pw} &
                                                                 ${coef_fri_pw} ${coef_fri_ww}

## Insert the geometry for the simulation
# Load in the stl file of a container and make it interactable
fix Drum all mesh/surface/stress file STL_files/Drum.STL type 2 scale 0.001 move 0.0 0.0 0.0
fix wall all wall/gran model hertz tangential history mesh n_meshes 1 meshes Drum
# Create a thin infinitly large plane in the x plain at a height of 0.15 meters
fix w1 all wall/gran model hertz tangential history primitive type 2 zplane 0.15

fix grav all gravity 9.81 vector 0.0 0.0 -1.0

fix integr all nve/sphere

timestep ${dt}
print "dt = ${dt}"

## Set screen output 
# Track the max height of the particles
compute max_height all reduce max z
variable max_h equal c_max_height
# Track the kinetic energy in the system
variable my_ke equal ke
# Keep track of the time in the simulation
variable sim_time equal step*${dt}
# Add dummy variable res for later use
variable res equal 0.0

# Set the output to the screen to show the current simulation step, number of atoms, number of bonds, the simulation time,
# the ammount of time that has passed since the start of the run, the estimated remaining time to finish the current run,
# the kinetic energy of the domain, and the max height of all particles
thermo_style custom step atoms numbonds v_sim_time cpu cpuremain ke v_max_h v_res
# Set how often the simulation outputs to the screen
thermo ${thermo_step}
# Ignore particles that leave the domain and do NOT noramlize the data
thermo_modify lost ignore norm no

# Wrtie particle locations to file
dump dmp all custom ${fileprint_step} post/calm/dump*.liggghts id type x y z ix iy iz vx vy vz fx fy fz omegax omegay omegaz radius

# Wrtie geometry location to file
dump stldrm all mesh/vtk ${fileprint_step} post/calm/stl_drum*.vtk stress stresscomponents Drum

# Run until we get the kinetic energy below our set tolerance
run ${set_step} # Run once to set/update all geometries and fixes
label begin_set_loop # Start of the loop
    variable old_height equal ${max_h}
    run ${set_step} pre no post no # Run so many steps until we check the KE again
    variable res equal abs(${old_height}-${max_h})
    if "${my_ke}<${ke_tol} && ${res}<${res_tol}" then &
        "jump in.read_restart end_set_loop" &
    else &
        "jump in.read_restart begin_set_loop"
label end_set_loop # End of the loop

# Unfix the geometry the wall (drum.stl) so we can add the plunger
unfix wall
# Add plunger and place it above the particles
variable above_particles equal ${max_h}+1.00*${particle_radius}
fix Plung all mesh/surface/stress file STL_files/Plung_225.STL type 2 scale 0.001 move 0.0 0.0 ${above_particles}
# Add the wall back this time with both geometries
fix wall all wall/gran model hertz tangential history mesh n_meshes 2 meshes Drum Plung

# Finalize all fixes before we write it to file
run 1

# Export the final simulation time so we know how much more time needs to be added
shell echo ${sim_time} > cur_time.txt

# Write the restart file
write_restart restarts/restart1.liggghts
